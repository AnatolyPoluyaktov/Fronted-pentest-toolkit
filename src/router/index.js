import Vue from 'vue';
import VueRouter from 'vue-router';
import Dashboard from '../views/Dashboard.vue';
import Login from '../views/Login.vue';

import store from '../store';

Vue.use(VueRouter);

const PUBLIC_PATHS = [ '/login'];

const routes = [
  {
    path: '/',
    name: 'Dashboard',
    component: Dashboard,
  },
  {
    path: '/login',
    name: 'Login',
    component: Login,
  },
  {
    path: "/domains",
    name: "domains",
    component: () => import("../views/Domain/DomainList.vue"),
  },

  {
    path: "/projects",
    name: "projects",
    component: () => import("../views/Project/ProjectList.vue"),
  },
{

    path: "/ips",
    name: "ips",
    component: () => import("../views/Ip/IpList.vue"),
} ,
  {
    path: "/services",
    name: "services",
    component: () => import("../views/Service/ServiceList.vue"),
  },
  {
    path: "/subnets",
    name: "subnets",
    component: () => import("../views/Subnet/SubnetList.vue"),

  },

];

const router = new VueRouter({
  mode: 'history',
  base: process.env.BASE_URL,
  routes,
});

const unAuthenticatedAndPrivatePage = (path) => (!PUBLIC_PATHS.includes(path)
    && !(store.state.isAuthenticated));

router.beforeEach((to, from, next) => {

  if (unAuthenticatedAndPrivatePage(to.path)) {
    console.log('requiresAuth');

      console.log('not authenticated');
      next({
        name: 'Login',
        query: { redirect: to.fullPath }
      })

  } else {
    next()
  }
})
export default router;
